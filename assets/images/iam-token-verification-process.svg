<svg viewBox="0 0 1200 900" xmlns="http://www.w3.org/2000/svg">
  <!-- Background -->
  <rect width="1200" height="900" fill="#f8f9fa"/>
  
  <!-- Title -->
  <text x="600" y="30" text-anchor="middle" font-size="24" font-weight="bold" fill="#333">
    How ElastiCache Verifies SigV4 Signatures
  </text>
  
  <!-- Client Side Box -->
  <rect x="50" y="70" width="500" height="350" fill="#e8f0fe" stroke="#4285f4" stroke-width="2" rx="10"/>
  <text x="300" y="95" text-anchor="middle" font-size="18" font-weight="bold" fill="#1a73e8">
    Client Side (Token Generation)
  </text>
  
  <!-- Token Generation Steps -->
  <rect x="80" y="120" width="440" height="280" fill="#fff" stroke="#34a853" stroke-width="1" rx="5"/>
  <text x="300" y="145" text-anchor="middle" font-size="14" font-weight="bold" fill="#34a853">
    SigV4 Signing Process
  </text>
  
  <text x="100" y="170" font-size="12" fill="#333">1. Create canonical request:</text>
  <rect x="100" y="180" width="400" height="60" fill="#f5f5f5" stroke="#ccc" stroke-width="1" rx="3"/>
  <text x="110" y="200" font-size="10" font-family="monospace" fill="#333">GET</text>
  <text x="110" y="215" font-size="10" font-family="monospace" fill="#333">/?Action=connect&amp;User=AIDACKCEV...</text>
  <text x="110" y="230" font-size="10" font-family="monospace" fill="#333">host:cluster-name.cache.amazonaws.com</text>
  
  <text x="100" y="260" font-size="12" fill="#333">2. Create string to sign:</text>
  <rect x="100" y="270" width="400" height="45" fill="#f5f5f5" stroke="#ccc" stroke-width="1" rx="3"/>
  <text x="110" y="285" font-size="10" font-family="monospace" fill="#333">AWS4-HMAC-SHA256</text>
  <text x="110" y="300" font-size="10" font-family="monospace" fill="#333">20250612T120000Z</text>
  <text x="110" y="310" font-size="10" font-family="monospace" fill="#333">20250612/us-east-1/elasticache/aws4_request</text>
  
  <text x="100" y="335" font-size="12" fill="#333">3. Calculate signature:</text>
  <rect x="100" y="345" width="400" height="40" fill="#e8f5e9" stroke="#4caf50" stroke-width="1" rx="3"/>
  <text x="110" y="365" font-size="10" font-family="monospace" fill="#2e7d32">HMAC(secret_key, string_to_sign)</text>
  <text x="110" y="378" font-size="10" font-family="monospace" fill="#2e7d32">= b4ca34889b8f2d5e7c3f8a0e9d2c1b5a7f8e9d0c...</text>
  
  <!-- ElastiCache Side Box -->
  <rect x="650" y="70" width="500" height="800" fill="#fff3e0" stroke="#ff9800" stroke-width="2" rx="10"/>
  <text x="900" y="95" text-anchor="middle" font-size="18" font-weight="bold" fill="#e65100">
    ElastiCache Service (Verification)
  </text>
  
  <!-- Verification Steps -->
  <rect x="680" y="120" width="440" height="730" fill="#fff" stroke="#f57c00" stroke-width="1" rx="5"/>
  <text x="900" y="145" text-anchor="middle" font-size="14" font-weight="bold" fill="#e65100">
    Signature Verification Process
  </text>
  
  <text x="700" y="170" font-size="12" fill="#333" font-weight="bold">1. Parse the presigned URL:</text>
  <rect x="700" y="180" width="400" height="80" fill="#f5f5f5" stroke="#ccc" stroke-width="1" rx="3"/>
  <text x="710" y="195" font-size="10" fill="#333">Extract:</text>
  <text x="710" y="210" font-size="9" font-family="monospace" fill="#333">• X-Amz-Credential (contains access key ID)</text>
  <text x="710" y="225" font-size="9" font-family="monospace" fill="#333">• X-Amz-Signature</text>
  <text x="710" y="240" font-size="9" font-family="monospace" fill="#333">• X-Amz-Date, X-Amz-Expires</text>
  <text x="710" y="255" font-size="9" font-family="monospace" fill="#333">• User parameter</text>
  
  <text x="700" y="280" font-size="12" fill="#333" font-weight="bold">2. Reconstruct canonical request:</text>
  <rect x="700" y="290" width="400" height="60" fill="#f5f5f5" stroke="#ccc" stroke-width="1" rx="3"/>
  <text x="710" y="310" font-size="10" font-family="monospace" fill="#333">GET</text>
  <text x="710" y="325" font-size="10" font-family="monospace" fill="#333">/?Action=connect&amp;User=AIDACKCEV...</text>
  <text x="710" y="340" font-size="10" font-family="monospace" fill="#333">host:cluster-name.cache.amazonaws.com</text>
  
  <text x="700" y="370" font-size="12" fill="#333" font-weight="bold">3. Lookup secret key:</text>
  <rect x="700" y="380" width="400" height="70" fill="#e3f2fd" stroke="#2196f3" stroke-width="2" rx="3"/>
  <text x="710" y="400" font-size="11" fill="#1565c0" font-weight="bold">AWS Internal Key Management Service</text>
  <text x="710" y="415" font-size="10" fill="#1565c0">Using Access Key ID from credential:</text>
  <text x="710" y="430" font-size="10" fill="#1565c0">AKIAIOSFODNN7EXAMPLE → secret_key</text>
  <text x="710" y="445" font-size="9" fill="#666">(This is internal to AWS infrastructure)</text>
  
  <text x="700" y="470" font-size="12" fill="#333" font-weight="bold">4. Recreate string to sign:</text>
  <rect x="700" y="480" width="400" height="45" fill="#f5f5f5" stroke="#ccc" stroke-width="1" rx="3"/>
  <text x="710" y="495" font-size="10" font-family="monospace" fill="#333">AWS4-HMAC-SHA256</text>
  <text x="710" y="510" font-size="10" font-family="monospace" fill="#333">20250612T120000Z</text>
  <text x="710" y="520" font-size="10" font-family="monospace" fill="#333">20250612/us-east-1/elasticache/aws4_request</text>
  
  <text x="700" y="545" font-size="12" fill="#333" font-weight="bold">5. Calculate expected signature:</text>
  <rect x="700" y="555" width="400" height="40" fill="#ffebee" stroke="#f44336" stroke-width="1" rx="3"/>
  <text x="710" y="575" font-size="10" font-family="monospace" fill="#c62828">HMAC(secret_key, string_to_sign)</text>
  <text x="710" y="588" font-size="10" font-family="monospace" fill="#c62828">= b4ca34889b8f2d5e7c3f8a0e9d2c1b5a7f8e9d0c...</text>
  
  <text x="700" y="615" font-size="12" fill="#333" font-weight="bold">6. Compare signatures:</text>
  <rect x="700" y="625" width="400" height="50" fill="#e8f5e9" stroke="#4caf50" stroke-width="2" rx="3"/>
  <text x="710" y="645" font-size="11" fill="#2e7d32">Provided: b4ca34889b8f2d5e7c3f8a0e9d2c1b5a...</text>
  <text x="710" y="660" font-size="11" fill="#2e7d32">Expected: b4ca34889b8f2d5e7c3f8a0e9d2c1b5a...</text>
  <text x="810" y="670" font-size="11" fill="#2e7d32" font-weight="bold">✓ MATCH!</text>
  
  <text x="700" y="695" font-size="12" fill="#333" font-weight="bold">7. Check IAM permissions:</text>
  <rect x="700" y="705" width="400" height="60" fill="#f3e5f5" stroke="#9c27b0" stroke-width="2" rx="3"/>
  <text x="710" y="725" font-size="11" fill="#6a1b9a" font-weight="bold">AWS IAM Internal API</text>
  <text x="710" y="740" font-size="10" fill="#6a1b9a">Check if AIDACKCEVSQ6C2EXAMPLE has:</text>
  <text x="710" y="755" font-size="10" fill="#6a1b9a">elasticache:Connect on this cluster</text>
  
  <text x="700" y="785" font-size="12" fill="#333" font-weight="bold">8. Grant or deny access:</text>
  <rect x="700" y="795" width="400" height="40" fill="#c8e6c9" stroke="#4caf50" stroke-width="2" rx="3"/>
  <text x="900" y="818" text-anchor="middle" font-size="14" fill="#2e7d32" font-weight="bold">
    Access Granted to ElastiCache
  </text>
  
  <!-- Key Points Box -->
  <rect x="50" y="450" width="500" height="200" fill="#f5f5f5" stroke="#666" stroke-width="1" rx="5"/>
  <text x="300" y="475" text-anchor="middle" font-size="14" font-weight="bold" fill="#333">
    Key Security Properties
  </text>
  
  <text x="70" y="500" font-size="12" fill="#333">
    • Secret key never transmitted - only the signature
  </text>
  <text x="70" y="525" font-size="12" fill="#333">
    • ElastiCache has internal access to AWS key store
  </text>
  <text x="70" y="550" font-size="12" fill="#333">
    • Time-limited tokens (X-Amz-Expires parameter)
  </text>
  <text x="70" y="575" font-size="12" fill="#333">
    • Signature includes timestamp to prevent replay attacks
  </text>
  <text x="70" y="600" font-size="12" fill="#333">
    • IAM permissions checked after signature validation
  </text>
  <text x="70" y="625" font-size="12" fill="#333">
    • No external API calls needed - all internal to AWS
  </text>
  
  <!-- Arrows -->
  <path d="M 550 250 L 650 250" stroke="#666" stroke-width="3" fill="none" marker-end="url(#arrowhead)"/>
  <text x="600" y="245" text-anchor="middle" font-size="12" fill="#666">Presigned URL</text>
  
  <!-- Arrow markers -->
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="10" refX="10" refY="5" orient="auto">
      <polygon points="0 0, 10 5, 0 10" fill="#666"/>
    </marker>
  </defs>
</svg>